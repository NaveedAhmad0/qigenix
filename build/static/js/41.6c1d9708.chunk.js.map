{"version":3,"sources":["Admin Panel/Admin-Panel-Pages/Notification/My select/MySelect.js","Admin Panel/Admin-Panel-Pages/Email Template/Send Email/SendEmail.js"],"names":["MySelect","props","allowSelectAll","options","allOption","onChange","selected","length","value","getOptionLabel","option","firstName","getOptionValue","customer_id","defaultProps","label","SendEmail","useState","makeAnimated","userList","setUserList","subject","setSubject","html","setHtml","email","setEmail","token","localStorage","getItem","useEffect","config","method","url","headers","Authorization","axios","then","res","data","className","class","for","e","target","map","item","type","id","name","editor","ClassicEditor","onReady","console","log","event","getData","onBlur","onFocus","onClick","preventDefault","JSON","stringify","status","alert","message","error","onSubmit"],"mappings":"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","file":"static/js/41.6c1d9708.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { default as ReactSelect } from \"react-select\";\n\nconst MySelect = (props) => {\n\tif (props.allowSelectAll) {\n\t\treturn (\n\t\t\t<ReactSelect\n\t\t\t\t{...props}\n\t\t\t\toptions={[props.allOption, ...props.options]}\n\t\t\t\tonChange={(selected) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tselected !== null &&\n\t\t\t\t\t\tselected.length > 0 &&\n\t\t\t\t\t\tselected[selected.length - 1].value === props.allOption.value\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn props.onChange(props.options);\n\t\t\t\t\t}\n\t\t\t\t\treturn props.onChange(selected);\n\t\t\t\t}}\n\t\t\t\tgetOptionLabel={(option) => option.firstName}\n\t\t\t\tgetOptionValue={(option) => option.customer_id}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn <ReactSelect {...props} />;\n};\n\nMySelect.propTypes = {\n\toptions: PropTypes.array,\n\tvalue: PropTypes.any,\n\tonChange: PropTypes.func,\n\tallowSelectAll: PropTypes.bool,\n\tallOption: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\tvalue: PropTypes.string,\n\t}),\n};\n\nMySelect.defaultProps = {\n\tallOption: {\n\t\tlabel: \"Select all\",\n\t\tvalue: \"*\",\n\t},\n};\n\nexport default MySelect;\n","import React, { useEffect, useState } from \"react\";\nimport \"./templateContent.css\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { components } from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport MySelect from \"../../Notification/My select/MySelect\";\nimport axios from \"axios\";\n\nconst Option = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<components.Option {...props}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={props.isSelected}\n\t\t\t\t\tonChange={() => null}\n\t\t\t\t/>{\" \"}\n\t\t\t\t<label>{props.label}</label>\n\t\t\t</components.Option>\n\t\t</div>\n\t);\n};\n\nconst MultiValue = (props) => (\n\t<components.MultiValue {...props}>\n\t\t{/* {console.log(props.data, \"props\")}\t */}\n\t\t<span>{props.data.firstName}</span>\n\t</components.MultiValue>\n);\n\nconst autoCloseTIcket = `<p class=\"card-text pt-2 pb-4\">\n\t\t\tHi <strong>firstName </strong> <strong>lastname</strong>\n\t\t\t<br />\n\t\t\tTicket <strong> ticket_subject </strong> has been auto close due to\n\t\t\tinactivity.\n\t\t\t<br />\n\t\t\t<br />\n\t\t\tTicket #:<strong> ticket_id </strong>\n\t\t\t<br />\n\t\t\tDepartment: <strong> ticket_department </strong>\n\t\t\t<br />\n\t\t\tPriority: <strong> ticket_priority </strong>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\tKind Regards, <br />\n\t\t\t{/* {email_signature} */}\n\t\t</p>`;\n\nconst SendEmail = () => {\n\tconst [optionSelected, setOptionSelected] = useState(\"\");\n\tconst animatedComponents = makeAnimated();\n\tconst [userList, setUserList] = useState([]);\n\tconst [subject, setSubject] = useState(\"\");\n\tconst [html, setHtml] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst token = localStorage.getItem(\"token\");\n\n\tconst handleChange = (selected, i) => {\n\t\tconst dataa = [];\n\t\tfor (let i = 0; i < selected?.length; i++) {\n\t\t\tconsole.log(\"select\", selected[i].email);\n\t\t\tdataa.push({\n\t\t\t\tcustomer_id: selected[i].email,\n\t\t\t\tfirstName: selected[i].firstName,\n\t\t\t});\n\t\t}\n\t\tsetOptionSelected(dataa);\n\t};\n\n\tuseEffect(() => {\n\t\tvar config = {\n\t\t\tmethod: \"get\",\n\t\t\turl: `https://qigenix.ixiono.com/apis/admin/getAllCustomer`,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: `${token}`,\n\t\t\t},\n\t\t};\n\t\taxios(config).then((res) => {\n\t\t\tsetUserList(res.data);\n\t\t});\n\t}, []);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// const userId = inputFields2[0].userId;\n\t\t// const deviceId = inputFields2[0].deviceId;\n\n\t\tconst data = JSON.stringify({\n\t\t\temail: email,\n\t\t\tsubject: subject,\n\t\t\thtml: html,\n\t\t});\n\n\t\ttry {\n\t\t\tvar config = {\n\t\t\t\tmethod: \"post\",\n\t\t\t\turl: `https://qigenix.ixiono.com/apis/admin/emailTemplate`,\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tAuthorization: `${token}`,\n\t\t\t\t},\n\t\t\t\tdata: data,\n\t\t\t};\n\t\t\taxios(config).then((res) => {\n\t\t\t\tconsole.log(\"res\", res.data);\n\t\t\t\tif (res.data.status === 200) {\n\t\t\t\t\talert(\"Sent sucessfully!\");\n\t\t\t\t} else {\n\t\t\t\t\talert(res.data.message);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (error) {\n\t\t\t\talert(\"something went wrong!\");\n\t\t\t}\n\t\t\tconsole.log(error.res.data);\n\t\t}\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row \">\n\t\t\t\t\t<div className=\"col-md-8 \">\n\t\t\t\t\t\t<div className=\"mod-content data \">\n\t\t\t\t\t\t\t<div className=\"mod-header-section d-flex justify-content-between \">\n\t\t\t\t\t\t\t\t<h4 className=\"mt-2\">Send Invoice To Customer</h4>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<div class=\"form-group pt-4 pr-4 pl-4\">\n\t\t\t\t\t\t\t\t\t<label for=\"fromname\" class=\"control-label\">\n\t\t\t\t\t\t\t\t\t\t<small class=\"text-danger\">* </small>\n\t\t\t\t\t\t\t\t\t\tTo Name\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t{/* <MySelect\n\t\t\t\t\t\t\t\t\t\toptions={userList}\n\t\t\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\t\t\tcloseMenuOnSelect={false}\n\t\t\t\t\t\t\t\t\t\thideSelectedOptions={false}\n\t\t\t\t\t\t\t\t\t\tcomponents={{ Option, MultiValue, animatedComponents }}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tallowSelectAll={true}\n\t\t\t\t\t\t\t\t\t\tvalue={optionSelected}\n\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-select\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t<option selected>Select </option>\n\t\t\t\t\t\t\t\t\t\t{userList?.map((item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={item.email}>{item.firstName}</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group pl-4 pr-4 pb-1\">\n\t\t\t\t\t\t\t\t\t<label for=\"subject[2]\" class=\"control-label p-2\">\n\t\t\t\t\t\t\t\t\t\tSubject\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tid=\"subject[2]\"\n\t\t\t\t\t\t\t\t\t\tname=\"subject[2]\"\n\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tvalue={subject}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tsetSubject(e.target.value);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group pl-4 pr-4 pb-1\">\n\t\t\t\t\t\t\t\t\t<label for=\"fromname\" class=\"control-label\">\n\t\t\t\t\t\t\t\t\t\t<small class=\"text-danger\">* </small>\n\t\t\t\t\t\t\t\t\t\tFrom Name\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tid=\"fromname\"\n\t\t\t\t\t\t\t\t\t\tname=\"fromname\"\n\t\t\t\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tvalue=\"{companyname} | CRM\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<p class=\"bold pl-4 pr-4 pb-1\">Email message</p>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group pl-4 pr-4 pb-2\">\n\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\tclassName=\"textArea\"\n\t\t\t\t\t\t\t\t\t\t// data=\"<p>Hello from CKEditor 5!</p>\"\n\t\t\t\t\t\t\t\t\t\tdata={html}\n\t\t\t\t\t\t\t\t\t\tonReady={(editor) => {\n\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Editor is ready to use!\", editor);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\t\t\t\tsetHtml(data);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Blur.\", editor);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Focus.\", editor);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\" pl-4 pb-3\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary pl-4 pr-4 pb-2 pt-2\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => onSubmit(e)}>\n\t\t\t\t\t\t\t\t\t\tSent\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-md-4\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SendEmail;\n"],"sourceRoot":""}